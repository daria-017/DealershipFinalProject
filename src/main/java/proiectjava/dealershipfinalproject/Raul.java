
package proiectjava.dealershipfinalproject;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.*;
import java.io.*;
import java.awt.event.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raul
 */
public class Raul extends javax.swing.JFrame {

    ImageIcon logo100x = new ImageIcon("logo100x.png");
    /**
     * Creates new form HomePage
     */
    public Raul() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPage = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Jetski = new javax.swing.JPanel();
        panelMasina1 = new javax.swing.JPanel();
        Titlu2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        idJetski = new javax.swing.JTextField();
        yearJetski = new javax.swing.JTextField();
        brandJetski = new javax.swing.JTextField();
        modelJetski = new javax.swing.JTextField();
        priceJetski = new javax.swing.JTextField();
        colorJetski = new javax.swing.JTextField();
        weightJetski = new javax.swing.JTextField();
        engineJetski = new javax.swing.JTextField();
        transmissionJetski = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        nauticalMilesJetski = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        propulsionSystemJetski = new javax.swing.JTextField();
        saveJetskiInTable = new javax.swing.JButton();
        handlebarsJetski = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableJetski = new javax.swing.JTable();
        sortButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        Yacht = new javax.swing.JPanel();
        panelMasina = new javax.swing.JPanel();
        Titlu1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        idYacht = new javax.swing.JTextField();
        yearYacht = new javax.swing.JTextField();
        brandYacht = new javax.swing.JTextField();
        modelYacht = new javax.swing.JTextField();
        priceYacht = new javax.swing.JTextField();
        colorYacht = new javax.swing.JTextField();
        weightYacht = new javax.swing.JTextField();
        engineYacht = new javax.swing.JTextField();
        transmissionYacht = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        nauticalMilesYacht = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        maxCrewYacht = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        flagYacht = new javax.swing.JTextField();
        saveYatchInTable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableYachts = new javax.swing.JTable();
        sortButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPage.setBackground(new java.awt.Color(255, 255, 255));
        mainPage.setForeground(new java.awt.Color(0, 102, 102));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        Jetski.setBackground(new java.awt.Color(255, 255, 255));
        Jetski.setForeground(new java.awt.Color(211, 210, 190));

        panelMasina1.setBackground(new java.awt.Color(255, 255, 255));

        Titlu2.setBackground(new java.awt.Color(211, 210, 190));
        Titlu2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        Titlu2.setText("Add Jetski");

        jLabel13.setBackground(new java.awt.Color(211, 210, 190));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel13.setText("ID");

        jLabel25.setBackground(new java.awt.Color(211, 210, 190));
        jLabel25.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel25.setText("BRAND");

        jLabel26.setBackground(new java.awt.Color(211, 210, 190));
        jLabel26.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel26.setText("MODEL");

        jLabel27.setBackground(new java.awt.Color(211, 210, 190));
        jLabel27.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel27.setText("YEAR");

        jLabel28.setBackground(new java.awt.Color(211, 210, 190));
        jLabel28.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel28.setText("COLOR");

        jLabel29.setBackground(new java.awt.Color(211, 210, 190));
        jLabel29.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel29.setText("PRICE");

        jLabel30.setBackground(new java.awt.Color(211, 210, 190));
        jLabel30.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel30.setText("WEIGHT");

        jLabel31.setBackground(new java.awt.Color(211, 210, 190));
        jLabel31.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel31.setText("ENGINE");

        jLabel32.setBackground(new java.awt.Color(211, 210, 190));
        jLabel32.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel32.setText("TRANSMISSION");

        engineJetski.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                engineJetskiActionPerformed(evt);
            }
        });

        jLabel44.setBackground(new java.awt.Color(211, 210, 190));
        jLabel44.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel44.setText("NAUTICAL MILES");

        jLabel45.setBackground(new java.awt.Color(211, 210, 190));
        jLabel45.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel45.setText("HANDLEBARS");

        jLabel46.setBackground(new java.awt.Color(211, 210, 190));
        jLabel46.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel46.setText("PROPULSION SYSTEM");

        propulsionSystemJetski.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                propulsionSystemJetskiActionPerformed(evt);
            }
        });

        saveJetskiInTable.setBackground(new java.awt.Color(0, 0, 0));
        saveJetskiInTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        saveJetskiInTable.setForeground(new java.awt.Color(255, 255, 255));
        saveJetskiInTable.setText("SAVE IN TABLE");
        saveJetskiInTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveJetskiInTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJetskiInTableActionPerformed(evt);
            }
        });

        handlebarsJetski.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FALSE", "TRUE" }));

        javax.swing.GroupLayout panelMasina1Layout = new javax.swing.GroupLayout(panelMasina1);
        panelMasina1.setLayout(panelMasina1Layout);
        panelMasina1Layout.setHorizontalGroup(
            panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMasina1Layout.createSequentialGroup()
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMasina1Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(Titlu2))
                    .addGroup(panelMasina1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel32))
                    .addGroup(panelMasina1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel44))
                    .addGroup(panelMasina1Layout.createSequentialGroup()
                        .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel46)
                            .addGroup(panelMasina1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel45))))
                        .addGap(22, 22, 22)
                        .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(propulsionSystemJetski)
                            .addComponent(weightJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(priceJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(colorJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(yearJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(modelJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(brandJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(idJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(transmissionJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(engineJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(nauticalMilesJetski, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(handlebarsJetski, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelMasina1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(saveJetskiInTable)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        panelMasina1Layout.setVerticalGroup(
            panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMasina1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titlu2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(idJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(brandJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(modelJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(yearJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(colorJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(priceJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(weightJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(engineJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(transmissionJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(nauticalMilesJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(propulsionSystemJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMasina1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(handlebarsJetski, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(saveJetskiInTable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableJetski.setAutoCreateRowSorter(true);
        tableJetski.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tableJetski.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Kawasaki", "Ultra 310X", "2023", "BLACK", "16000", "600", "jetskiEngine1", "jetskiTransmission1", "140", "Waterjet", "TRUE"},
                {"2", "Honda", "AquaTrax", "2022", "YELLOW", "14500", "500", "jetskiEngine2", "jetskiTransmission2", "130", "Waterjet", "TRUE"},
                {"3", "Sea-Doo", "Spark Trixx", "2021", "WHITE", "12000", "450", "jetskiEngine3", "jetskiTransmission3", "90", "Propeller", "TRUE"},
                {"4", "Yamaha", "SuperJet", "2020", "GRAY", "13000", "400", "jetskiEngine4", "jetskiTransmission4", "110", "Waterjet", "FALSE"},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "BRAND", "MODEL", "YEAR", "COLOR", "PRICE", "WEIGHT", "ENGINE", "TRANSMISSION", "NAUTICAL MILES", "PROPULSION SYSTEM", "HANDLEBARS SYSTEM"
            }
        ));
        jScrollPane2.setViewportView(tableJetski);

        sortButton2.setBackground(new java.awt.Color(0, 0, 0));
        sortButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sortButton2.setForeground(new java.awt.Color(255, 255, 255));
        sortButton2.setText("SORT by: Price low to High");
        sortButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sortButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SAVE IN .TXT FILE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("READ FROM .TXT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("DELETE FROM .TXT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JetskiLayout = new javax.swing.GroupLayout(Jetski);
        Jetski.setLayout(JetskiLayout);
        JetskiLayout.setHorizontalGroup(
            JetskiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JetskiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMasina1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(JetskiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JetskiLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButton4)
                        .addGap(34, 34, 34)
                        .addComponent(jButton5)
                        .addGap(30, 30, 30)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sortButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JetskiLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1094, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        JetskiLayout.setVerticalGroup(
            JetskiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JetskiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JetskiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JetskiLayout.createSequentialGroup()
                        .addComponent(panelMasina1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(JetskiLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JetskiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sortButton2)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6))
                        .addGap(25, 70, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Jetski", Jetski);

        Yacht.setBackground(new java.awt.Color(255, 255, 255));
        Yacht.setForeground(new java.awt.Color(211, 210, 190));

        panelMasina.setBackground(new java.awt.Color(255, 255, 255));

        Titlu1.setBackground(new java.awt.Color(211, 210, 190));
        Titlu1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        Titlu1.setText("Add Yacht");

        jLabel12.setBackground(new java.awt.Color(211, 210, 190));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel12.setText("ID");

        jLabel17.setBackground(new java.awt.Color(211, 210, 190));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel17.setText("BRAND");

        jLabel18.setBackground(new java.awt.Color(211, 210, 190));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel18.setText("MODEL");

        jLabel19.setBackground(new java.awt.Color(211, 210, 190));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel19.setText("YEAR");

        jLabel20.setBackground(new java.awt.Color(211, 210, 190));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel20.setText("COLOR");

        jLabel21.setBackground(new java.awt.Color(211, 210, 190));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel21.setText("PRICE");

        jLabel22.setBackground(new java.awt.Color(211, 210, 190));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel22.setText("WEIGHT");

        jLabel23.setBackground(new java.awt.Color(211, 210, 190));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel23.setText("ENGINE");

        jLabel24.setBackground(new java.awt.Color(211, 210, 190));
        jLabel24.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel24.setText("TRANSMISSION");

        engineYacht.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                engineYachtActionPerformed(evt);
            }
        });

        jLabel41.setBackground(new java.awt.Color(211, 210, 190));
        jLabel41.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel41.setText("NAUTICAL MILES");

        jLabel42.setBackground(new java.awt.Color(211, 210, 190));
        jLabel42.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel42.setText("MAX CREW");

        jLabel43.setBackground(new java.awt.Color(211, 210, 190));
        jLabel43.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel43.setText("FLAG");

        saveYatchInTable.setBackground(new java.awt.Color(0, 0, 0));
        saveYatchInTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        saveYatchInTable.setForeground(new java.awt.Color(255, 255, 255));
        saveYatchInTable.setText("SAVE IN TABLE");
        saveYatchInTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveYatchInTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveYatchInTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMasinaLayout = new javax.swing.GroupLayout(panelMasina);
        panelMasina.setLayout(panelMasinaLayout);
        panelMasinaLayout.setHorizontalGroup(
            panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMasinaLayout.createSequentialGroup()
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(Titlu1))
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24))
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel41))
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel42))
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel43))
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addGap(88, 88, 88)
                        .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(weightYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colorYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transmissionYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(engineYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nauticalMilesYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maxCrewYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flagYacht, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelMasinaLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(saveYatchInTable)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        panelMasinaLayout.setVerticalGroup(
            panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMasinaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titlu1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(idYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(brandYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(modelYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(yearYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(colorYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(priceYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(weightYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(engineYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(transmissionYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(nauticalMilesYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(maxCrewYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMasinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(flagYacht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(saveYatchInTable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableYachts.setAutoCreateRowSorter(true);
        tableYachts.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tableYachts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Azimut", "Grande", "2023", "BLUE", "5000000", "30000", "yachtEngine1", "yachtTransmission1", "400", "12", "Italy"},
                {"2", "Sunseeker", "Predator", "2022", "RED", "4500000", "28000", "yachtEngine2", "yachtTransmission2", "350", "10", "UK"},
                {"3", "Princess", "X95", "2021", "WHITE", "6000000", "35000", "yachtEngine3", "yachtTransmission3", "500", "15", "France"},
                {"4", "Ferretti", "Y920", "2020", "BLACK", "7000000", "40000", "yachtEngine4", "yachtTransmission4", "450", "20", "Italy"}
            },
            new String [] {
                "ID", "BRAND", "MODEL", "YEAR", "COLOR", "PRICE", "WEIGHT", "ENGINE", "TRANSMISSION", "NAUTICAL MILES", "MAX CREW", "FLAG"
            }
        ));
        jScrollPane1.setViewportView(tableYachts);

        sortButton.setBackground(new java.awt.Color(0, 0, 0));
        sortButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sortButton.setForeground(new java.awt.Color(255, 255, 255));
        sortButton.setText("SORT by: Price low to High");
        sortButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("DELETE FROM .TXT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("READ FROM .TXT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SAVE IN .TXT FILE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout YachtLayout = new javax.swing.GroupLayout(Yacht);
        Yacht.setLayout(YachtLayout);
        YachtLayout.setHorizontalGroup(
            YachtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(YachtLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMasina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(YachtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(YachtLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(44, 44, 44)
                        .addComponent(sortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(373, 373, 373))
                    .addGroup(YachtLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        YachtLayout.setVerticalGroup(
            YachtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(YachtLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMasina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(YachtLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(YachtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortButton)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 83, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Yacht", Yacht);

        javax.swing.GroupLayout mainPageLayout = new javax.swing.GroupLayout(mainPage);
        mainPage.setLayout(mainPageLayout);
        mainPageLayout.setHorizontalGroup(
            mainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        mainPageLayout.setVerticalGroup(
            mainPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(mainPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveYatchInTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveYatchInTableActionPerformed

        if (idYacht.getText().equals("") ||
            brandYacht.getText().equals("") ||
            modelYacht.getText().equals("") ||
            yearYacht.getText().equals("") ||
            colorYacht.getText().equals("") ||
            priceYacht.getText().equals("") ||
            weightYacht.getText().equals("") ||
            engineYacht.getText().equals("") ||
            transmissionYacht.getText().equals("") ||
            nauticalMilesYacht.getText().equals("") ||
            maxCrewYacht.getText().equals("") ||
            flagYacht.getText().equals("") ) {

            JOptionPane.showMessageDialog(this, "Toate câmpurile sunt obligatorii!");
        } else {

            String date[] = {
                idYacht.getText(),
                brandYacht.getText(),
                modelYacht.getText(),
                yearYacht.getText(),
                colorYacht.getText(),
                priceYacht.getText(),
                weightYacht.getText(),
                engineYacht.getText(),
                transmissionYacht.getText(),
                nauticalMilesYacht.getText(),
                maxCrewYacht.getText(),
                flagYacht.getText()
            };

            DefaultTableModel tblModel = (DefaultTableModel) tableYachts.getModel();
            tblModel.addRow(date);
            JOptionPane.showMessageDialog(this, "Date adăugate cu succes!");

            idYacht.setText("");
            brandYacht.setText("");
            modelYacht.setText("");
            yearYacht.setText("");
            colorYacht.setText("");
            priceYacht.setText("");
            weightYacht.setText("");
            engineYacht.setText("");
            transmissionYacht.setText("");
            nauticalMilesYacht.setText("");
            maxCrewYacht.setText("");
            flagYacht.setText("");
        }
    }//GEN-LAST:event_saveYatchInTableActionPerformed

    private void engineYachtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_engineYachtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_engineYachtActionPerformed

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
            // Obținem modelul tabelului
    DefaultTableModel model = (DefaultTableModel) tableYachts.getModel();

    // Verificăm dacă tabelul conține rânduri
    if (model.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Tabelul este gol. Nu există date de sortat.", "Atenție", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Creăm o listă pentru a stoca rândurile tabelului
    ArrayList<Object[]> rows = new ArrayList<>();

    // Adăugăm toate rândurile din tabel în listă
    for (int i = 0; i < model.getRowCount(); i++) {
        Object[] row = new Object[model.getColumnCount()];
        for (int j = 0; j < model.getColumnCount(); j++) {
            row[j] = model.getValueAt(i, j);
        }
        rows.add(row);
    }

    // Sortăm lista în funcție de preț (coloana 5)
    rows.sort((row1, row2) -> {
        double price1 = Double.parseDouble(row1[5].toString()); 
        double price2 = Double.parseDouble(row2[5].toString());
        return Double.compare(price1, price2); // Sortare crescătoare (low to high)
    });

    // Golim tabelul existent
    model.setRowCount(0);

    // Re-adăugăm rândurile sortate în tabel
    for (Object[] row : rows) {
        model.addRow(row);
    }

    // Mesaj pentru utilizator
    JOptionPane.showMessageDialog(this, "Sort by: Low to High.");
    }//GEN-LAST:event_sortButtonActionPerformed

    private void engineJetskiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_engineJetskiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_engineJetskiActionPerformed

    private void saveJetskiInTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJetskiInTableActionPerformed
                                                 
    // Verificăm dacă vreun câmp este gol
    if (idJetski.getText().equals("") ||
        brandJetski.getText().equals("") ||
        modelJetski.getText().equals("") ||
        yearJetski.getText().equals("") ||
        colorJetski.getText().equals("") ||
        priceJetski.getText().equals("") ||
        weightJetski.getText().equals("") ||
        engineJetski.getText().equals("") ||
        transmissionJetski.getText().equals("") ||
        nauticalMilesJetski.getText().equals("") ||
        propulsionSystemJetski.getText().equals("")) {

        JOptionPane.showMessageDialog(this, "Toate câmpurile sunt obligatorii!");
    } else {
        // Preluăm datele din câmpurile text
        String date[] = {
            idJetski.getText(),
            brandJetski.getText(),
            modelJetski.getText(),
            yearJetski.getText(),
            colorJetski.getText(),
            priceJetski.getText(),
            weightJetski.getText(),
            engineJetski.getText(),
            transmissionJetski.getText(),
            nauticalMilesJetski.getText(),
            propulsionSystemJetski.getText(),
            handlebarsJetski.getSelectedItem().toString() // Valoarea booleană din JComboBox
        };

        // Adăugăm datele în tabel
        DefaultTableModel tblModel = (DefaultTableModel) tableJetski.getModel();
        tblModel.addRow(date);
        JOptionPane.showMessageDialog(this, "Date adăugate cu succes!");

        // Resetăm câmpurile text pentru introducerea următoare
        idJetski.setText("");
        brandJetski.setText("");
        modelJetski.setText("");
        yearJetski.setText("");
        colorJetski.setText("");
        priceJetski.setText("");
        weightJetski.setText("");
        engineJetski.setText("");
        transmissionJetski.setText("");
        nauticalMilesJetski.setText("");
        propulsionSystemJetski.setText("");
        handlebarsJetski.setSelectedIndex(0); // Resetăm JComboBox-ul la valoarea implicită (False)
    }


    }//GEN-LAST:event_saveJetskiInTableActionPerformed

    private void sortButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButton2ActionPerformed
        // TODO add your handling code here:
                    // Obținem modelul tabelului
    DefaultTableModel model = (DefaultTableModel) tableYachts.getModel();

    // Verificăm dacă tabelul conține rânduri
    if (model.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Tabelul este gol. Nu există date de sortat.", "Atenție", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Creăm o listă pentru a stoca rândurile tabelului
    ArrayList<Object[]> rows = new ArrayList<>();

    // Adăugăm toate rândurile din tabel în listă
    for (int i = 0; i < model.getRowCount(); i++) {
        Object[] row = new Object[model.getColumnCount()];
        for (int j = 0; j < model.getColumnCount(); j++) {
            row[j] = model.getValueAt(i, j);
        }
        rows.add(row);
    }

    // Sortăm lista în funcție de preț (coloana 5)
    rows.sort((row1, row2) -> {
        double price1 = Double.parseDouble(row1[5].toString()); 
        double price2 = Double.parseDouble(row2[5].toString());
        return Double.compare(price1, price2); // Sortare crescătoare (low to high)
    });

    // Golim tabelul existent
    model.setRowCount(0);

    // Re-adăugăm rândurile sortate în tabel
    for (Object[] row : rows) {
        model.addRow(row);
    }

    // Mesaj pentru utilizator
    JOptionPane.showMessageDialog(this, "Sort by: Low to High.");
    }//GEN-LAST:event_sortButton2ActionPerformed

    private void propulsionSystemJetskiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_propulsionSystemJetskiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_propulsionSystemJetskiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\thepy\\OneDrive\\Desktop\\POO.txt"))) {
            DefaultTableModel model = (DefaultTableModel) tableYachts.getModel();
            int rowCount = model.getRowCount();
            int columnCount = model.getColumnCount();

            for (int i = 0; i < rowCount; i++) {
                for (int j = 0; j < columnCount; j++) {
                    writer.write(model.getValueAt(i, j).toString());
                    if (j < columnCount - 1) {
                        writer.write("\t");  // Tab-separated values for each column
                    }
                }
                writer.newLine(); // New line for each row
            }
            JOptionPane.showMessageDialog(this, "Data saved successfully.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableYachts.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tableYachts.getModel();
            model.removeRow(selectedRow);  // Remove the row from the JTable

            // Now, update the text file by removing the same row
            try {
                File file = new File("C:\\Users\\thepy\\OneDrive\\Desktop\\POO.txt");
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                StringBuilder fileContent = new StringBuilder();
                int currentRow = 0;
                int rowCount = model.getRowCount();

                while ((line = reader.readLine()) != null) {
                    if (currentRow != selectedRow) {
                        fileContent.append(line).append("\n");
                    }
                    currentRow++;
                }
                reader.close();

                // Rewrite the text file without the deleted row
                BufferedWriter writer = new BufferedWriter(new FileWriter(file));
                writer.write(fileContent.toString());
                writer.close();

                JOptionPane.showMessageDialog(this, "Row deleted successfully.");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error deleting row: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try (BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\thepy\\OneDrive\\Desktop\\POO.txt"))) {
            String line;
            DefaultTableModel model = (DefaultTableModel) tableYachts.getModel();
            model.setRowCount(0);  // Clear existing rows

            while ((line = reader.readLine()) != null) {
                String[] rowData = line.split("\t");  // Assuming tab-separated values
                model.addRow(rowData);  // Add data to JTable model
            }

            JOptionPane.showMessageDialog(this, "Data loaded successfully.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage());
        }
        // Create and show the frame
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\thepy\\OneDrive\\Desktop\\POO1.txt"))) {
            DefaultTableModel model = (DefaultTableModel) tableJetski.getModel();
            int rowCount = model.getRowCount();
            int columnCount = model.getColumnCount();

            for (int i = 0; i < rowCount; i++) {
                for (int j = 0; j < columnCount; j++) {
                    writer.write(model.getValueAt(i, j).toString());
                    if (j < columnCount - 1) {
                        writer.write("\t");  // Tab-separated values for each column
                    }
                }
                writer.newLine(); // New line for each row
            }
            JOptionPane.showMessageDialog(this, "Data saved successfully.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableJetski.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tableJetski.getModel();
            model.removeRow(selectedRow);  // Remove the row from the JTable

            // Now, update the text file by removing the same row
            try {
                File file = new File("C:\\Users\\thepy\\OneDrive\\Desktop\\POO1.txt");
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                StringBuilder fileContent = new StringBuilder();
                int currentRow = 0;
                int rowCount = model.getRowCount();

                while ((line = reader.readLine()) != null) {
                    if (currentRow != selectedRow) {
                        fileContent.append(line).append("\n");
                    }
                    currentRow++;
                }
                reader.close();

                // Rewrite the text file without the deleted row
                BufferedWriter writer = new BufferedWriter(new FileWriter(file));
                writer.write(fileContent.toString());
                writer.close();

                JOptionPane.showMessageDialog(this, "Row deleted successfully.");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error deleting row: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
     
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try (BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\thepy\\OneDrive\\Desktop\\POO1.txt"))) {
            String line;
            DefaultTableModel model = (DefaultTableModel) tableJetski.getModel();
            model.setRowCount(0);  // Clear existing rows

            while ((line = reader.readLine()) != null) {
                String[] rowData = line.split("\t");  // Assuming tab-separated values
                model.addRow(rowData);  // Add data to JTable model
            }

            JOptionPane.showMessageDialog(this, "Data loaded successfully.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Raul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Raul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Raul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Raul.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Raul().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Jetski;
    private javax.swing.JLabel Titlu1;
    private javax.swing.JLabel Titlu2;
    private javax.swing.JPanel Yacht;
    private javax.swing.JTextField brandJetski;
    private javax.swing.JTextField brandYacht;
    private javax.swing.JTextField colorJetski;
    private javax.swing.JTextField colorYacht;
    private javax.swing.JTextField engineJetski;
    private javax.swing.JTextField engineYacht;
    private javax.swing.JTextField flagYacht;
    private javax.swing.JComboBox<String> handlebarsJetski;
    private javax.swing.JTextField idJetski;
    private javax.swing.JTextField idYacht;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPage;
    private javax.swing.JTextField maxCrewYacht;
    private javax.swing.JTextField modelJetski;
    private javax.swing.JTextField modelYacht;
    private javax.swing.JTextField nauticalMilesJetski;
    private javax.swing.JTextField nauticalMilesYacht;
    private javax.swing.JPanel panelMasina;
    private javax.swing.JPanel panelMasina1;
    private javax.swing.JTextField priceJetski;
    private javax.swing.JTextField priceYacht;
    private javax.swing.JTextField propulsionSystemJetski;
    private javax.swing.JButton saveJetskiInTable;
    private javax.swing.JButton saveYatchInTable;
    private javax.swing.JButton sortButton;
    private javax.swing.JButton sortButton2;
    private javax.swing.JTable tableJetski;
    private javax.swing.JTable tableYachts;
    private javax.swing.JTextField transmissionJetski;
    private javax.swing.JTextField transmissionYacht;
    private javax.swing.JTextField weightJetski;
    private javax.swing.JTextField weightYacht;
    private javax.swing.JTextField yearJetski;
    private javax.swing.JTextField yearYacht;
    // End of variables declaration//GEN-END:variables
}
